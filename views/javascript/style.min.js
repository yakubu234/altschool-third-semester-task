'use strict'

// close button
var buttons = document.getElementById("chat_close_icon");
buttons.onclick = function (e) {
    e.preventDefault()
    // alert(this.id);
    alert("close button will close the tab");
};

//time
let time = new Date().toLocaleTimeString([], { hour: '2-digit', minute: "2-digit", hour12: false });

//scroll view 
var box = document.querySelector('.Messenger_content'),
    targetElm = document.querySelector('.promp'); // <-- Scroll to here within ".box"

// the chat form field
var chatsForm = document.getElementById("messenger");
var inputField = document.getElementById("Input_field");

chatsForm.addEventListener('submit', (e) => {
    e.preventDefault()
    var input = inputField.value.toLowerCase();
    var unformattedInput = inputField.value;

    // append the unformmatted message to the input field
    userMessage(unformattedInput);

    try {
        // Send input to server
        ws.send(input);
    } catch (error) {
        console.log('closed')
    }
    inputField.value = '';
})

function userMessage(msg) {
    document.querySelector('.Messages_list').innerHTML += '<div class="msg user" style="margin-bottom:30px;"><span class="avtr"><figure style="background-image: url(https://mrseankumar25.github.io/Sandeep-Kumar-Frontend-Developer-UI-Specialist/images/avatar.png)"></figure></span><span class="responsText">' +
        msg + "<span class='chat-timestamp'><b>You</b> - Today " + time + "</span></span></div>";
    scroll();

}

function botMessage(msg) {
    document.querySelector('.Messages_list').innerHTML +=
        '<div class="msg bot-msg"><span class="avtr robot"><figure style="background-image: url(../img/robot.svg)"></figure></span><span class="responsText">' +
        msg +
        "<span class='chat-timestamp'><b>Bot</b> - Today " + time + "</span></span></div>";
    scroll();
}


function scroll() {
    const last = Array.from(
        document.querySelectorAll('.msg')
    ).pop();
    last.scrollIntoView({ behavior: 'smooth' })
}

let uuid = new DeviceUUID().get();
if (getLocalStorage() != null) uuid = atob(getLocalStorage())

setLocalStorage(btoa(uuid))
setSessionStorage(btoa(uuid))

window.onload = function () {  //calling the init route to store the session
    console.log(uuid)
    $.ajax({
        type: 'POST',
        url: "/uuid",
        async: false,
        data: { uuid: uuid },
        success: function () {
            console.log('session initialized');
        },
        error: function (e) {
            console.log(e)
            console.log('error');
        }
    })

}

function setLocalStorage(uuid) {
    return localStorage.setItem("buka-app-token", JSON.stringify(uuid));
}

function getLocalStorage() {
    const data = localStorage.getItem("buka-app-token");
    return JSON.parse(data)
}


function setSessionStorage(uuid) {
    return sessionStorage.setItem("buka_app_token", JSON.stringify(uuid));
}
